View(dupl)
View(dupl_carac)
View(caracteristicas)
caracteristicas_agregada <- caracteristicas |>
group_by(chave) |>
summarise_all(first)
caracteristicas_agregada <- caracteristicas |>
distinct(chave, .keep_all = TRUE)
154684+307
caracteristicas <- caracteristicas |>
distinct(chave, .keep_all = TRUE)
teste <- left_join(sib_ativo_RJ, caracteristicas, by=c("chave"))
dados <- left_join(sib_ativo_RJ, caracteristicas, by=c("chave"))
operadora <- read.csv("C:/Users/caioa/Downloads/Relatorio_cadop.csv", sep=";")
operadora <- operadora |>
select(1:5)
dados<- left_join(dados,operadora, join_by(CD_OPERADORA==Registro_ANS))
View(dados)
dados <- left_join(sib_ativo_RJ, caracteristicas, by=c("CD_CONTA","CD_OPERADORA"))
dados <- left_join(sib_ativo_RJ, caracteristicas, by=c("CD_CONTA"=="CD_CONTA","CD_OPERADORA"=="CD_OPERADORA"))
dados <- left_join(sib_ativo_RJ, caracteristicas, by=c("CD_CONTA"="CD_CONTA","CD_OPERADORA"="CD_OPERADORA"))
View(sib_ativo_RJ)
dados <- left_join(sib_ativo_RJ, caracteristicas, by=c("CD_PLANO"="CD_PLANO","CD_OPERADORA"="CD_OPERADORA"))
View(dados)
dados<- left_join(dados,operadora, join_by(CD_OPERADORA==Registro_ANS))
View(dados)
table(dados$COBERTURA)
dados<- dados |>
left_join(operadora, join_by(CD_OPERADORA==Registro_ANS)) |>
filter(COBERTURA=="Médico-hospitalar")
View(dados)
produtos <- read.csv("C:/Users/caioa/Downloads/produtos_e_prestadores_hospitalares/produtos_prestadores_hospitalares_RJ.csv", sep=";")
View(produtos)
produtos1 <- produtos |>
mutate("chave"=paste(CD_PLANO,CD_OPERADORA))|>
distinct(chave, .keep_all = TRUE)
produtos1 <- produtos |>
mutate("chave"=paste(CD_PLANO,CD_OPERADORA))|>
group_by(chave) %>%
summarise(count = n()) %>%
filter(count > 1)
View(produtos1)
View(produtos)
produtos1 <- produtos |>
mutate("chave"=paste(CD_PLANO,CD_OPERADORA, CD_MUNICIPIO))|>
group_by(chave) %>%
summarise(count = n()) %>%
filter(count > 1)
View(produtos1)
produtos1 <- produtos |>
filter(CD_MUNICIPIO==330580) |>
mutate("chave"=paste(CD_PLANO,CD_OPERADORA, CD_MUNICIPIO))|>
group_by(chave) %>%
summarise(count = n()) %>%
filter(count > 1)
View(produtos1)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO) |>
distinct(CD_MUNICIPIO, .keep_all = TRUE)
View(produtos1)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO) |>
distinct(CD_MUNICIPIO, .keep_all = TRUE)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO) |>
distinct(CD_MUNICIPIO)
View(produtos1)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO)
produtos1 <- produtos1 |>
distinct(CD_MUNICIPIO, .keep_all = TRUE)
View(produtos1)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO)
View(produtos1)
produtos1 <- produtos1 |>
distinct(CD_MUNICIPIO)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO)
produtos1 <- produtos1 |>
distinct(NM_MUNICIPIO, .keep_all = TRUE)
View(produtos1)
produtos1 <- produtos |>
select(CD_MUNICIPIO,NM_MUNICIPIO)
produtos1 <- produtos1 |>
distinct(.keep_all = TRUE)
View(produtos1)
produtos1 <- produtos1 |>
duplicated()
produtos1 <- produtos |>
select(contains("MUNICIPIO"))
View(produtos1)
produtos1 <- produtos |>
select(contains("MUNICIPIO")) |>
distinct(contains("MUNICIPIO"), .keep_all = T)
produtos1 <- produtos |>
select(contains("MUNICIPIO")) |>
distinct(CD_MUNICIPIO, .keep_all = T)
View(produtos1)
produtos1 <- produtos |>
select(contains("MUNICIPIO")) |>
distinct(CD_MUNICIPIO, .keep_all = T) |>
arrange(descr(CD_MUNICIPIO))
produtos1 <- produtos |>
select(contains("MUNICIPIO")) |>
distinct(CD_MUNICIPIO, .keep_all = T) |>
arrange(desc(CD_MUNICIPIO))
View(produtos1)
produtos1 <- produtos1[-1:14,]
produtos1 <- produtos1[-(1:14),]
View(produtos1)
rm(list=ls())
library(tidyverse)
#  Carregamento dos dados ----
produtos <- read.csv("C:/Users/caioa/Downloads/produtos_e_prestadores_hospitalares/produtos_prestadores_hospitalares_RJ.csv", sep=";")
sib_ativo_RJ <- read.csv("C:/Users/caioa/Downloads/sib_ativo_RJ/sib_ativo_RJ.csv", sep=";")
caracteristicas<- read.csv("C:/Users/caioa/Downloads/caracteristicas_produtos_saude_suplementar.csv", sep=";")
operadora <- read.csv("C:/Users/caioa/Downloads/Relatorio_cadop.csv", sep=";")
# Preparando os dados ----
sib_ativo_RJ <- sib_ativo_RJ |>
mutate("CD_PLANO"=ifelse(is.na(CD_PLANO_RPS),CD_PLANO_SCPA,CD_PLANO_RPS), .before = CD_PLANO_RPS) |>
filter(CD_MUNICIPIO==330580)
caracteristicas <- caracteristicas |>
mutate("chave"=paste(CD_PLANO,CD_OPERADORA))|>
distinct(chave, .keep_all = TRUE)
mun <- produtos |>
select(contains("MUNICIPIO")) |>
distinct(CD_MUNICIPIO, .keep_all = T) |>
arrange(desc(CD_MUNICIPIO))
mun<- mun[-(1:14),]
dados <- left_join(sib_ativo_RJ, caracteristicas, by=c("CD_PLANO"="CD_PLANO","CD_OPERADORA"="CD_OPERADORA"))
operadora <- operadora |>
select(1:5)
dados<- dados |>
left_join(operadora, join_by(CD_OPERADORA==Registro_ANS)) |>
filter(COBERTURA=="Médico-hospitalar")
View(dados)
View(mun)
dados<- dados |>
left_join(operadora, join_by(CD_OPERADORA==Registro_ANS)) |>
filter(COBERTURA=="Médico-hospitalar") |>
left_join(mun, join_by(CD_MUNICIPIO))
View(mun)
dados<- dados |>
left_join(operadora, join_by(CD_OPERADORA==Registro_ANS)) |>
filter(COBERTURA=="Médico-hospitalar") |>
mutate("CD_MUNICIPIO"=as.character(CD_MUNICIPIO)) |>
left_join(mun, join_by(CD_MUNICIPIO))
View(dados)
mun_analisados <- c("CACHOEIRAS DE MACACU", "CANTAGALO", "CARMO", "GUAPIMIRIM", "NOVA FRIBURGO", "PETROPOLIS",
"SAO JOSE DO VALE DO RIO PRETO", "SUMIDOURO", "TERESOPOLIS")
View(mun)
source("~/.active-rstudio-document", echo=TRUE)
mun <- produtos |>
select(contains("MUNICIPIO")) |>
distinct(CD_MUNICIPIO, .keep_all = T) |>
arrange(desc(CD_MUNICIPIO))
mun<- mun[-(1:14),]
sib_ativo_RJ <- sib_ativo_RJ |>
mutate("CD_PLANO"=ifelse(is.na(CD_PLANO_RPS),CD_PLANO_SCPA,CD_PLANO_RPS), .before = CD_PLANO_RPS) |>
mutate("CD_MUNICIPIO"=as.character(CD_MUNICIPIO)) |>
left_join(mun, join_by(CD_MUNICIPIO)) |>
filter(NM_MUNICIPIO  %in% mun_analisados)
caracteristicas <- caracteristicas |>
mutate("chave"=paste(CD_PLANO,CD_OPERADORA))|>
distinct(chave, .keep_all = TRUE)
dados <- left_join(sib_ativo_RJ, caracteristicas, by=c("CD_PLANO"="CD_PLANO","CD_OPERADORA"="CD_OPERADORA"))
operadora <- operadora |>
select(1:5)
dados<- dados |>
left_join(operadora, join_by(CD_OPERADORA==Registro_ANS)) |>
filter(COBERTURA=="Médico-hospitalar")
rm(list = setdiff(ls(), "dados"))
gc()
# Carregar os pacotes necessários
library(rvest)
# URL da página a ser raspada
url <- "https://www.oddsportal.com/football/brazil/serie-a-2023/results/"
# Ler o conteúdo HTML da página
pagina <- read_html(url)
# Carregar os pacotes necessários
library(rvest)
# URL da página a ser raspada
url <- "https://www.oddsportal.com/football/brazil/serie-a-2023/results/"
# Ler o conteúdo HTML da página
pagina <- read_html(url)
times <- pagina %>%
html_elements(".table-main .team-home") %>%
html_text(trim = TRUE)
resultados <- pagina %>%
html_elements(".table-main .result") %>%
html_text(trim = TRUE)
# Criar um dataframe com os dados
dados_partidas <- data.frame(
Time_Casa = times,
Resultado = resultados,
stringsAsFactors = FALSE
)
# Exibir os dados
print(dados_partidas)
library(RSelenium)
install.packages("RSelenium")
library(RSelenium)
rD <- rsDriver(browser = "firefox", port = 4445L)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "edge", port = 4445L)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "internet explorer", port = 4445L)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "internet explorer", port = 4445L)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "internet explorer", port = 4445L)
library(RSelenium)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "internet explorer", port = 4445L)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "internet explorer", port = 4445L)
library(RSelenium)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "firefox", port = 4445L)
library(RSelenium)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "firefox", port = 4445L)
install.packages("rJava")
library(RSelenium)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "firefox", port = 4445L)
library(rJava)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "firefox", port = 4445L)
Sys.setenv(JAVA_HOME = "C:\Program Files\Java\jdk-23")
Sys.setenv(JAVA_HOME = "C:/Program Files/Java/jdk-23")
library(rJava)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "firefox", port = 4445L)
library(RSelenium)
# Iniciar o servidor Selenium
rD <- rsDriver(browser = "firefox", port = 4445L)
install.packages("rJava")
library(rJava)
.jinit()
library(RSelenium)
rD <- rsDriver(browser = "firefox", port = 4445L)
library(RSelenium)
rD <- rsDriver(browser = "firefox", port = 4445L)
remDr <- rD$client
# URL da página a ser raspada
url <- "https://www.oddsportal.com/football/brazil/serie-a-2023/results/"
# Abrir a URL
remDr$navigate(url)
# Abrir a URL
remDr$navigate(url)
print(url)
# Definir o URL
url <- "https://www.oddsportal.com/football/brazil/serie-a-2023/results/"
# Iniciar o RSelenium
rD <- rsDriver(browser = "firefox", port = 4445L)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Comparação de duas distribuições normais"),
sidebarLayout(
sidebarPanel(
sliderInput("cutoff",
"Escolha o ponto de corte (c):",
min = 100, max = 200, value = 150, step = 1),
# Mostra textos do Erro Tipo I e Tipo II:
textOutput("alpha"),
textOutput("beta")
),
mainPanel(
plotOutput("distPlot")
)
)
)
server <- function(input, output) {
# Renderiza o gráfico
output$distPlot <- renderPlot({
# Obtém o valor do ponto de corte do slider
cutoff <- input$cutoff
# Intervalo de x para plotar
x <- seq(80, 220, length = 500)
# Densidades das duas distribuições:
# H0: média = 145, sd = 12
# H1: média = 155, sd = 20
d0 <- dnorm(x, mean = 145, sd = 12)
d1 <- dnorm(x, mean = 155, sd = 20)
# Cria dataframe para usar com ggplot
df <- data.frame(
x = x,
h0 = d0,
h1 = d1
)
# Calcula erros
# Erro Tipo I (alpha): probabilidade de rejeitar H0 quando H0 é verdadeira
alpha_val <- 1 - pnorm(cutoff, mean = 145, sd = 12)
# Erro Tipo II (beta): probabilidade de não rejeitar H0 quando H1 é verdadeira
beta_val  <- pnorm(cutoff, mean = 155, sd = 20)
# Monta o ggplot
ggplot(df, aes(x = x)) +
geom_line(aes(y = h0, color = "H0")) +
geom_line(aes(y = h1, color = "H1")) +
# Área para Erro Tipo I (na parte acima do cutoff para H0):
geom_area(
data = subset(df, x > cutoff),
aes(y = h0, fill = "Erro Tipo I"),
alpha = 0.4
) +
# Área para Erro Tipo II (na parte até o cutoff para H1):
geom_area(
data = subset(df, x <= cutoff),
aes(y = h1, fill = "Erro Tipo II"),
alpha = 0.4
) +
# Linha tracejada indicando o cutoff
geom_vline(xintercept = cutoff, linetype = "dashed") +
# Ajustes de cor / legenda
scale_color_manual(name = "Distribuições",
values = c("H0" = "blue", "H1" = "red")) +
scale_fill_manual(name = "Regiões de Erro",
values = c("Erro Tipo I" = "blue",
"Erro Tipo II" = "red")) +
theme_minimal() +
labs(x = "Valor observado", y = "Densidade")
})
# Texto para Erro Tipo I
output$alpha <- renderText({
alpha_val <- 1 - pnorm(input$cutoff, mean = 145, sd = 12)
paste0("Erro de Tipo I (α) = ", round(alpha_val, 4))
})
# Texto para Erro Tipo II
output$beta <- renderText({
beta_val <- pnorm(input$cutoff, mean = 155, sd = 20)
paste0("Erro de Tipo II (β) = ", round(beta_val, 4))
})
}
# Executa a aplicação
shinyApp(ui = ui, server = server)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("mathjaxr")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
ceiling(149.75)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
runApp('C:/Users/caioa/OneDrive/Área de Trabalho/aula_ufscar.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='da05uy-caio-azevedo', token='8A37CAD1D71799F45A46A42A3CCC8CB7', secret='tAN+Z2qHhwrOGXiWMldvZ/6yMINHKTDkv2nMghds')
getwd()
library(rsconnect)
rsconnect::deployApp("C:/Users/caioa/OneDrive/Documentos/aula_ufscar.R")
source("~/.active-rstudio-document", echo=TRUE)
library(rsconnect)
rsconnect::deployApp("C:/Users/caioa/OneDrive/Documentos/aula_ufscar.R")
setwd("C:/Users/caioa/OneDrive/Documentos/aula_ufscar_app")
setwd("C:/Users/caioa/OneDrive/Documentos/aula_ufscar")
rsconnect::deployApp()
options(rsconnect.quarto = NULL)
source("~/deploy_aula.R", echo=TRUE)
rlang::last_trace()
setwd("C:/Users/caioa/OneDrive/Documentos/aula_ufscar")
options(rsconnect.quarto = NULL)
rsconnect::deployApp(".")
View(dados)
rm(list=ls())
source("~/.active-rstudio-document", echo=TRUE)
# Dados
mu_0 <- 1000  # Média populacional hipotética
x_bar <- 1002 # Média amostral
sigma <- 5    # Desvio padrão populacional
n <- 50       # Tamanho da amostra
# Estatística z
z <- (x_bar - mu_0) / (sigma / sqrt(n))
# Valor p (teste bilateral)
p_value <- 2 * (1 - pnorm(abs(z)))
# Resultados
cat("Estatística z:", z, "\n")
cat("Valor-p:", p_value, "\n")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
setwd("C:/Users/caioa/OneDrive/Documentos/aula_ufscar")
options(rsconnect.quarto = NULL)
rsconnect::deployApp(".")
source("~/deploy_aula.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/GitHub/oficina_futebol/R/qrcode.R", echo=TRUE)
source("~/GitHub/oficina_futebol/R/qrcode.R", echo=TRUE)
source("~/GitHub/oficina_futebol/R/qrcode.R", echo=TRUE)
